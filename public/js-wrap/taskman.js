var currentTask = null;

function openTaskmanView() {
    document.querySelectorAll(".taskman-spacer").forEach(e => e.classList.remove('closed'));
    document.querySelector("#taskman").classList.remove('closed');
}

function closeTaskmanView() {
    document.querySelectorAll(".taskman-spacer").forEach(e => e.classList.add('closed'));
    document.querySelector("#taskman").classList.add('closed');

    currentTask = null;
}



// –§–£–ù–ö–¶–ò–ò –ù–ò–ñ–ï –¢–†–ï–ë–£–Æ–¢ –ü–†–ò–í–ò–õ–ï–ì–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
function taskmanGetInfo(taskId, submitStatus) {
    const token = getToken();

    fetch(`../api/board${currentBoard}/task${taskId}`, {
        headers: {
            'Authorization': `Bearer ${token}`
        }
    })
    .then(response => response.json())
    .then(data => {
        currentTask = taskId;
        const taskInfo = document.querySelector('#taskman-taskinfo');
        const taskSubmits = document.querySelector('#taskman-tasksubmits');
        taskInfo.innerHTML = '';
        taskSubmits.innerHTML = '';

        const taskTitle = document.createElement('h1');
        taskTitle.innerText = data.title;
        taskInfo.appendChild(taskTitle);

        const taskBody = document.createElement('p');
        taskBody.innerText = data.body;
        taskInfo.appendChild(taskBody);

        taskInfo.appendChild(document.createElement('br'));

        const taskDue = document.createElement('i');
        if (data.date_due !== null) {
            const taskDueDate = ISOtoDDMMYY(data.date_due);
            taskDue.innerText = `–°—Ä–æ–∫ —Å–¥–∞—á–∏: –î–û ${taskDueDate} (–Ω–µ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)`;

            if (checkIfOutdated(data.date_due)) {
                taskDue.classList.add('task-outdated');
            }
        }
        else {
            taskDue.innerText = `–ë–µ–∑ –∫—Ä–∞–π–Ω–µ–≥–æ —Å—Ä–æ–∫–∞ —Å–¥–∞—á–∏.`;
        }
        taskInfo.appendChild(taskDue);

        document.querySelector('#taskman-actions__submit-body').classList.add('hidden');
        document.querySelector('#taskman-actions__btn-submit').classList.add('hidden');
        document.querySelector('#taskman-actions__btn-delete').classList.add('hidden');

        // –ù–µ –¥–µ–ª–∞–µ–º –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –µ—Å–ª–∏ —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–æ,
        // —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø–∞—Ä–≤–ª—è–ª –ø–æ—Å—ã–ª–∫—É.
        if (submitStatus !== undefined) {
            fetch(`../api/board${currentBoard}/task${taskId}/submit`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => response.json())
            .then(data => {
                //console.log(data);
                const submitDate = new Date(data.date_submitted);
                const submitStatus = data.status;
                const submitText = data.text;

                const submitDateContainer = document.createElement('h1');
                submitDateContainer.innerText = `–ü–æ—Å—ã–ª–∫–∞ –æ—Ç ${submitDate.toLocaleString()}`;
                taskSubmits.appendChild(submitDateContainer);

                const submitStatusContainer = document.createElement('h3');
                submitStatusContainer.className = 'taskman-tasksubmit__status';

                if (submitStatus === 'pending') {
                    submitStatusContainer.innerText = 'üêù –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏‚Ä¶';
                    submitStatusContainer.classList.add('taskman-tasksubmit__status-pending');
                    document.querySelector('#taskman-actions__btn-delete').classList.remove('hidden');
                }
                else if (submitStatus === 'accepted') {
                    submitStatusContainer.innerText = 'üèÜ –ü–†–ò–ù–Ø–¢–û!';
                    submitStatusContainer.classList.add('taskman-tasksubmit__status-accepted');
                }
                else if (submitStatus === 'rejected') {
                    submitStatusContainer.innerText = 'üóø –û—Ç–∫–ª–æ–Ω–µ–Ω–æ';
                    submitStatusContainer.classList.add('taskman-tasksubmit__status-rejected');
                    document.querySelector('#taskman-actions__btn-delete').classList.remove('hidden');
                }
                else {
                    submitStatusContainer.innerText = '‚ÅâÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                    document.querySelector('#taskman-actions__btn-delete').classList.remove('hidden');
                }
                taskSubmits.appendChild(submitStatusContainer);

                const submitTextContainer = document.createElement('pre');
                submitTextContainer.className = 'taskman__tasksubmit-text';
                submitTextContainer.innerText = submitText;
                taskSubmits.appendChild(submitTextContainer);
            })
            .catch(error => console.error(error));
        }
        else {
            taskSubmits.innerHTML = '<span class="pale">–í—ã –µ—â—ë –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ø–æ—Å—ã–ª–∫—É –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏&nbsp;‚Äî <br>—Å–∞–º–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å!</p>';

            document.querySelector('#taskman-actions__submit-body').classList.remove('hidden');
            document.querySelector('#taskman-actions__btn-submit').classList.remove('hidden');
        }
    })
    .catch(error => console.error(error));
}

function taskmanSendSubmit() {
    const token = getToken();
    const submitText = document.querySelector('#taskman-actions__submit-body').value;

    fetch(`../api/board${currentBoard}/task${currentTask}/submit`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({ body: submitText })
    })
    .then(response => response.json())
    .then(data => {
        if (data.message !== undefined) { alert(data.message); }

        else {
            alert('–ü–æ—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
            document.querySelector('#taskman-actions__submit-body').value = '';
            updateTasklist();
            taskmanGetInfo(currentTask);
        }
    })
    .catch(error => console.error(error));
}

function taskmanDeleteSubmit() {
    const token = getToken();

    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—ã–ª–∫—É?')) {
        fetch(`../api/board${currentBoard}/task${currentTask}/submit`, {
            method: 'DELETE',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message !== undefined) { alert(data.message); }

            else {
                updateTasklist();
                taskmanGetInfo(currentTask);
            }
        })
        .catch(error => console.error(error));
    }
}
